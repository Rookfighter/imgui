intf_libs = # Interface dependencies.
import intf_libs += imgui%lib{imgui}
impl_libs = # Implementation dependencies.

platform_libs = -framework AppKit -framework ModelIO

lib{imgui-platform-osx}: {hxx cxx}{**} $impl_libs $intf_libs

# Build options.
out_pfx_inc = [dir_path] $out_root/imgui/
src_pfx_inc = [dir_path] $src_root/imgui/

cxx.libs =+ $platform_libs
cxx.poptions =+ "-I$out_pfx_inc" "-I$src_pfx_inc" -DIMGUI_EXPORT

{hbmia obja}{*}: cxx.poptions += -DIMGUI_PLATFORM_OSX_STATIC_BUILD
{hbmis objs}{*}: cxx.poptions += -DIMGUI_PLATFORM_OSX_SHARED_BUILD

# Export options.
lib{imgui-platform-osx}:
{
    cxx.export.poptions = "-I$out_pfx_inc" "-I$src_pfx_inc"
    cxx.export.libs = $intf_libs $platform_libs
}

liba{imgui-platform-osx}: cxx.export.poptions += -DIMGUI_PLATFORM_OSX_STATIC
libs{imgui-platform-osx}: cxx.export.poptions += -DIMGUI_PLATFORM_OSX_SHARED

define mm: file
mm{*}: extension = mm

objcxx_files = {**.mm}
objcxx_files = $regex.apply($objcxx_files,'(.+)\.mm','\1')

[rule_hint=cxx] libul{imgui-platform-osx-meta}: $impl_libs $intf_libs

for n: $objcxx_files
{
    obja{$(n).a.o}: mm{$n}
    objs{$(n).so.o}: mm{$n}
}

liba{imgui-platform-osx}: obja{$regex.apply($objcxx_files,'(.+)','\1.a.o')}
libs{imgui-platform-osx}: objs{$regex.apply($objcxx_files,'(.+)','\1.so.o')}

obja{~'/(.*).a/'}: mm{~'/\1/'} libua{imgui-platform-osx-meta}
{{
    dep_poptions = $cxx.lib_poptions(libua{imgui-platform-osx-meta}, obja)
    depdb hash $dep_poptions
    depdb dyndep "-I$out_root/imgui" "-I$src_root/imgui" \
                 --what=header --default-type=h \
                 --update-exclude libua{imgui-platform-osx-meta} \
                 -- $cxx.path $cc.poptions $cxx.poptions $dep_poptions \
                    $cc.coptions $cxx.coptions $cxx.mode -M -MG $path($<[0])
    diag obj-c++ ($<[0])
    $cxx.path $cc.poptions $cxx.poptions $dep_poptions    \
              $cc.coptions $cxx.coptions $cxx.mode        \
              -o $path($>) -c -x objective-c++ $path($<[0])
}}
objs{~'/(.*).so/'}: mm{~'/\1/'} libus{imgui-platform-osx-meta}
{{
    dep_poptions = $cxx.lib_poptions(libus{imgui-platform-osx-meta}, objs)
    depdb hash $dep_poptions
    depdb dyndep "-I$out_root/imgui" "-I$src_root/imgui" \
                 --what=header --default-type=h \
                 --update-exclude libus{imgui-platform-osx-meta} \
                 -- $cxx.path $cc.poptions $cxx.poptions $dep_poptions \
                    $cc.coptions $cxx.coptions $cxx.mode -M -MG $path($<[0])
    diag obj-c++ ($<[0])
    $cxx.path $cc.poptions $cxx.poptions $dep_poptions    \
              $cc.coptions $cxx.coptions $cxx.mode        \
              -o $path($>) -c -x objective-c++ $path($<[0])
}}

# For pre-releases use the complete version to make sure they cannot be used
# in place of another pre-release or the final version. See the version module
# for details on the version.* variable values.
if $version.pre_release
    lib{imgui-platform-osx}: bin.lib.version = "-$version.project_id"
else
    lib{imgui-platform-osx}: bin.lib.version = "-$version.major.$version.minor"

hxx{*}:
{
    install = include/
    install.subdirs = true
}
